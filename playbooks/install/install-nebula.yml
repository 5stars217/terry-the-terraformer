
- name: Allow all Nebula traffic in the Lighthouse firewall
  when: am_lighthouse is defined and am_lighthouse
  shell: |
    ufw allow from any proto udp to any port 4242

- name: Create the Nebula directory
  ansible.builtin.file:
    path: /opt/nebula
    state: directory

- name: Get the Nebula package from GitHub
  ansible.builtin.get_url:
    url: https://github.com/slackhq/nebula/releases/download/v1.5.2/nebula-linux-amd64.tar.gz
    dest: /opt/nebula

- name: Extract the Nebula package
  ansible.builtin.unarchive:
    src: /opt/nebula/nebula-linux-amd64.tar.gz
    dest: /opt/nebula
    remote_src: true
  
- name: Deploy the Nebula Root certificate
  ansible.builtin.copy:
    src: "{{ op_directory }}/nebula/ca.crt"
    dest: "/opt/nebula/ca.crt"

- name: Deploy the Nebula client certificate
  ansible.builtin.copy:
    src: "{{ op_directory }}/nebula/{{ uuid }}.crt"
    dest: "/opt/nebula/host.crt"

- name: Deploy the Nebula client key
  ansible.builtin.copy:
    src: "{{ op_directory }}/nebula/{{ uuid }}.key"
    dest: "/opt/nebula/host.key"

- name: Deploy the Nebula configuration
  ansible.builtin.template:
    src: '{{ playbook_dir }}/../templates/nebula/nebula-configuration.yaml.j2'
    dest: '/opt/nebula/config.yaml'

- name: Create the Nebula service
  ansible.builtin.copy: 
    dest: /etc/systemd/system/nebula.service
    content: |
      [Unit]
      Description=Nebula Mesh VPN Service

      [Service]
      Type=simple
      User=root
      StandardOutput=syslog
      StandardError=syslog
      WorkingDirectory=/opt/nebula
      ExecStart=/opt/nebula/nebula -config config.yaml

      [Install]
      WantedBy=multi-user.target
      
- name: Load the new service file and start the service
  shell: |
    systemctl daemon-reload && systemctl --now enable nebula.service

- name: Open the UFW firewall to allow Nebula subnet to communicate freely
  shell: |
    ufw allow in on nebula1
    ufw route allow in on nebula1