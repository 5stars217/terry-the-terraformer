---
- name: Setup the Mailserver
  hosts: mailserver
  become: true
  tasks:  

  # https://www.linuxbabe.com/mail-server/setting-up-dkim-and-spf

  - name: Verify UFW installed
    apt:
      name: ufw
      state: present
  
  - name: Set the options for PostFix to install non-interactively
    shell: |
      debconf-set-selections <<< "postfix postfix/mailname string {{ mailing_domain }}" 
      debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"

  - name: Install Mailutils (Includes PostFix) and OpenDKIM
    apt:
      pkg: 
        - mailutils
        - opendkim
        - opendkim-tools

  - name: Allow PostFix to only listen on the localhost
    ansible.builtin.replace:
      path: '/etc/postfix/main.cf'
      regexp: '^inet_interfaces'
      replace: 'inet_interfaces = loopback-only'

  - name: Create a forwarding email alias for root
    ansible.builtin.copy:
      path: /etc/aliases
      content: |
        # /etc/aliases
        mailer-daemon: postmaster
        postmaster: root
        nobody: root
        hostmaster: root
        usenet: root
        news: root
        webmaster: root
        www: root
        ftp: root
        abuse: root
        noc: root
        security: root
        root: {{ main_email }}
  
  - name: Allow for the Alias to take effect
    shell: |
      newaliases

  - name: Install Certbot 
    include_tasks: '{{ playbook_dir }}/install/install-certbot.yml'

  - name: Allow SSL verification in the Firewall
    shell: |
      ufw allow 80
      
  - name: Enforce firewall rules
    include_tasks: "{{ playbook_dir }}/core/enforce-firewall-rules.yml"
  
  - name: Request the SSL cert for the domain
    shell: |
      certbot certonly --no-eff-email --standalone --rsa-key-size 4096 --agree-tos -m {{ main_email }} --preferred-challenges http -n -d {{ mailing_domain }} 

  - name: Close the Firewall 
    shell: |
      ufw deny 80

  - name: Enforce firewall rules
    include_tasks: "{{ playbook_dir }}/core/enforce-firewall-rules.yml"

  - name: Edit PostFix configuration to use new SSL Certificate
    ansible.builtin.replace:
      path: '/etc/postfix/main.cf'
      regexp: '^smtpd_tls_cert_file'
      replace: 'smtpd_tls_cert_file=/etc/letsencrypt/live/{{ mailing_domain }}/fullchain.pem'

  - name: Edit PostFix configuration to use new SSL Certificate Key
    ansible.builtin.replace:
      path: '/etc/postfix/main.cf'
      regexp: '^smtpd_tls_key_file'
      replace: 'smtpd_tls_key_file=/etc/letsencrypt/live/{{ mailing_domain }}/privkey.pem'

  - name: Allow the PostFix user access to the OpenDKIM group
    shell: |
      gpasswd -a postfix opendkim

  - name: change the Canonicalization configuration for OpenDKIM 
    ansible.builtin.replace:
      path: /etc/opendkim.conf
      regex: '^Canonicalization'
      replace: 'Canonicalization   relaxed/simple'
  
  - name: Add additional configuration to OpenDKIM
    ansible.builtin.replace:
      path: /etc/opendkim.conf
      after: '^SubDomains'
      replace: |
        SubDomains		no
        ######### TERRY BASE CONFIG #########
        AutoRestart         yes
        AutoRestartRate     10/1M
        Background          yes
        DNSTimeout          5
        SignatureAlgorithm  rsa-sha256
        KeyTable            refile:/etc/opendkim/key.table
        SigningTable        refile:/etc/opendkim/signing.table
        ExternalIgnoreList  /etc/opendkim/trusted.hosts
        InternalHosts       /etc/opendkim/trusted.hosts
        ######### TERRY BASE CONFIG #########

  - name: Create the OpenDKIM folder structure
    ansible.builtin.file:
      path: '{{ item }}'
      state: directory
      owner: opendkim
    loop:
      - '/etc/opendkim'
      - '/etc/opendkim/keys'
      - '/etc/opendkim/keys/{{ mailing_domain }}'

  - name: Create the base OpenDKIM signing table 
    ansible.builtin.copy:
      path: /etc/opendkim/signing.table
      content: |
        *@{{ mailing_domain }}    default._domainkey.{{ mailing_domain }}

  - name: Create the base OpenDKIM key table 
    ansible.builtin.copy:
      path: /etc/opendkim/signing.table
      content: |
        default._domainkey.{{ mailing_domain }}     {{ mailing_domain }}:default:/etc/opendkim/keys/{{ mailing_domain }}/default.private

  - name: Create the base OpenDKIM trusted hosts
    ansible.builtin.copy:
      path: /etc/opendkim/trusted.hosts
      content: |
        127.0.0.1
        localhost
        *.{{ mailing_domain }}

  - name: Generate the DKIM Key Pair
    shell: |
      opendkim-genkey -b 2048 -d {{ mailing_domain }} -D /etc/opendkim/keys/{{ mailing_domain }} -s default -v

  - name: Change ownership and permissions on the new key file
    ansible.builtin.file:
      path: '/etc/opendkim/keys/{{ mailing_domain }}/default.private'
      state: present
      owner: opendkim
      group: opendkim
      mode: '0600'

  - name: Create the folder to hold the OpenDKIM socket 
    ansible.builtin.file:
      path: /var/spool/postfix/opendkim
      state: directory
      owner: opendkim
      group: postfix

  - name: Change OpenDKIM socket creation path (master config)
    ansible.builtin.replace: 
      path: /etc/opendkim.conf
      regex: '^Socket'
      replace: "Socket    local:/var/spool/postfix/opendkim/opendkim.sock"

  - name: Change OpenDKIM socket creation path (default config)
    ansible.builtin.replace: 
      path: /etc/default/opendkim
      regex: '^SOCKET'
      replace: "SOCKET=\"local:/var/spool/postfix/opendkim/opendkim.sock\""

  - name: Allow PostFix to call OpenDKIM using the milter protocol
    ansible.builtin.lineinfile:
      path: /etc/postfix/main.cf
      line: |
        ######### TERRY MILTER CONFIG #########
        milter_default_action = accept
        milter_protocol = 6
        smtpd_milters = local:opendkim/opendkim.sock
        non_smtpd_milters = $smtpd_milters
        ######### TERRY MILTER CONFIG #########
  
  - name: Restart PostFix and OpenDKIM 
    shell: |
      systemctl restart opendkim postfix

  - name: Open all SMTP ports
    shell: |
      ufw allow 80,443,587,465,143,993/tcp

