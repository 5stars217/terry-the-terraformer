---
- name: Setup the Mailserver
  hosts: mailserver
  become: true
  tasks:  

  # https://www.linuxbabe.com/mail-server/setting-up-dkim-and-spf

  - name: Verify UFW installed
    apt:
      name: ufw
      state: present

  - name: Extract the root_domain from the base domain
    set_fact:
      root_domain: "{{ domain.split('.')[ (domain.split('.') | length | int) - 2:] | join('.') }}"
  
  - name: Set the options for PostFix to install non-interactively
    shell: |
      debconf-set-selections <<< "postfix postfix/mailname string {{ domain }}"
      debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
    args:
      executable: /bin/bash

  - name: Install Mailutils, PostFix and OpenDKIM
    apt:
      pkg: 
        - mailutils
        - postfix
        - opendkim
        - opendkim-tools

  - name: Deploy the aliases configuration template
    ansible.builtin.copy:
      src: '{{ playbook_dir }}/../templates/postfix/aliases.j2'
      dest: /etc/aliases
  
  - name: Allow for the Alias to take effect
    shell: |
      newaliases

  # - name: Install Certbot 
  #   include_tasks: '{{ playbook_dir }}/install/install-certbot.yml'

  # - name: Allow SSL verification in the Firewall
  #   shell: |
  #     ufw allow 80
      
  # - name: Enforce firewall rules
  #   include_tasks: "{{ playbook_dir }}/core/enforce-firewall-rules.yml"
  
  # - name: Request the SSL cert for the domain
  #   shell: |
  #     certbot certonly --no-eff-email --standalone --rsa-key-size 4096 --agree-tos -m {{ main_email }} --preferred-challenges http -n -d {{ domain }} 

  # - name: Close the Firewall 
  #   shell: |
  #     ufw deny 80

  # - name: Enforce firewall rules
  #   include_tasks: "{{ playbook_dir }}/core/enforce-firewall-rules.yml"

  - name: Deploy the Postfix configuration template
    ansible.builtin.template:
      src: '{{ playbook_dir }}/../templates/postfix/main.cf.j2'
      dest: '/etc/postfix/main.cf'

  - name: Allow the PostFix user access to the OpenDKIM group
    shell: |
      gpasswd -a postfix opendkim

  - name: Deploy the OpenDKIM configuration template
    ansible.builtin.template:
      src: '{{ playbook_dir }}/../templates/opendkim/opendkim.conf.j2'
      dest: /etc/opendkim.conf

  - name: Create the OpenDKIM folder structure
    ansible.builtin.file:
      path: '{{ item }}'
      state: directory
      owner: opendkim
    loop:
      - '/etc/opendkim'
      - '/etc/opendkim/keys'
      - '/etc/opendkim/keys/{{ root_domain }}'

  - name: Deploy the OpenDKIM signing table template
    ansible.builtin.template:
      src: '{{ playbook_dir }}/../templates/opendkim/signing.table.j2'
      dest: /etc/opendkim/signing.table

  - name: Deploy the OpenDKIM key table template
    ansible.builtin.template:
      src: '{{ playbook_dir }}/../templates/opendkim/key.table.j2'
      dest: /etc/opendkim/key.table

  - name: Create the base OpenDKIM trusted hosts
    ansible.builtin.template:
      src: '{{ playbook_dir }}/../templates/opendkim/trusted.hosts.j2'
      dest: /etc/opendkim/trusted.hosts

  - name: Generate the DKIM Key Pair
    shell: |
      opendkim-genkey -b 2048 -d {{ root_domain }} -D /etc/opendkim/keys/{{ root_domain }} -s default -v

  - name: Change ownership and permissions on the new key file
    ansible.builtin.file:
      path: '/etc/opendkim/keys/{{ root_domain }}/default.private'
      owner: opendkim
      group: opendkim
      mode: '0600'

  - name: Copy the DKIM key back to the Terry host
    ansible.builtin.fetch:
      src: "/etc/opendkim/keys/{{ root_domain }}/default.txt"
      dest: "{{ op_directory }}/ansible/extra_files/{{ uuid }}_dkim_default.txt"
      flat: true
    
  - name: Create the folder to hold the OpenDKIM socket 
    ansible.builtin.file:
      path: /var/spool/postfix/opendkim
      state: directory
      owner: opendkim
      group: postfix

  - name: Deploy the OpenDKIM service configuration template
    ansible.builtin.template: 
      src: '{{ playbook_dir }}/../templates/opendkim/opendkim.j2'
      dest: /etc/default/opendkim
  
  - name: Enable and start OpenDKIM
    ansible.builtin.service:
      name: opendkim
      enabled: true
      state: restarted

  - name: Enable and start Postfix
    ansible.builtin.service:
      name: postfix
      enabled: true
      state: restarted

  # - name: Restart PostFix and OpenDKIM 
  #   shell: |
  #     systemctl stop opendkim postfix
  #     systemctl enable opendkim postfix --now

  - name: Make the Postfix group own the OpenDKIM socket
    ansible.builtin.file:
      path: /var/spool/postfix/opendkim/opendkim.sock
      owner: opendkim
      group: postfix
      mode: '0070' 

  - name: Open all SMTP ports
    shell: |
      ufw allow 80,443,587,465,143,993/tcp

