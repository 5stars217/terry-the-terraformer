---
- name: Add Team Accounts, SSH Access, and UFW Firewall
  gather_facts: true
  hosts: all
  become: true
  tasks:

  - name: Ensure the terryites user group exists
    ansible.builtin.group:
      name: terryites
      state: present

  - name: Set the hostname of the server to be the domain name (if set)
    shell: |
      hostnamectl set-hostname {{ domain }}
    when: domain is defined

  - name: Set the hostname of the server to be the resource name (when domain not set)
    shell: |
      hostnamectl set-hostname {{ name }}
    when: domain is undefined

  - name: Add the team as users to server
    ansible.builtin.user:
      name: "{{ item.value.user }}"
      state: present
      create_home: yes
      groups: [ terryites ]
      shell: /bin/bash
    loop: "{{ team | dict2items }}"
    loop_control:
      label: "{{ item.value.user }}"
  
  - name: Add SSH Keys for the defined users
    include_tasks: "{{ playbook_dir }}/install/install-ssh-key.yml"
    loop: "{{ team | dict2items }}"
    loop_control:
      label: "{{ user.value.user }}"
      loop_var: "user"

  - name: Allow the terryites group to sudo without a password
    ansible.builtin.lineinfile:
      path: /etc/sudoers
      line: "%terryites ALL=(ALL) NOPASSWD:ALL"
      state: present

  - name: Update APT repositories cache and install "ufw" and "tmux" packages
    apt:
      pkg:
        - ufw
        - tmux
      update_cache: yes
      lock_timeout: 360

  - name: Prep the UFW Firewall
    shell: |
      ufw default deny incoming
      ufw allow from {{ item.value.public_ip }} proto tcp to any port 22 
    loop: "{{ team | dict2items }}"
    loop_control:
      label: "{{ item.value.user }}"

  - name: Install Nebula
    import_tasks: "{{ playbook_dir }}/install/install-nebula.yml"
    when: nebula

  - name: Install Filebeats
    include_tasks: '{{ playbook_dir }}/install/install-filebeat.yml'
    when: elastic

  - name: Enforce firewall rules
    include_tasks: "{{ playbook_dir }}/core/enforce-firewall-rules.yml"
      